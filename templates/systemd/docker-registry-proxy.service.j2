{#
SPDX-FileCopyrightText: 2024 Nikita Chernyi

SPDX-License-Identifier: AGPL-3.0-or-later
#}

[Unit]
Description=Docker Registry Proxy ({{ docker_registry_proxy_identifier }})
{% for service in docker_registry_proxy_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in docker_registry_proxy_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ docker_registry_proxy_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ docker_registry_proxy_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
			--rm \
			--name={{ docker_registry_proxy_identifier }} \
			--log-driver=none \
			--user={{ docker_registry_proxy_uid }}:{{ docker_registry_proxy_gid }} \
			--cap-drop=ALL \
			--network={{ docker_registry_proxy_container_network }} \
			--label-file={{ docker_registry_proxy_base_path }}/labels \
			--env-file={{ docker_registry_proxy_base_path }}/env \
			{% for arg in docker_registry_proxy_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ docker_registry_proxy_container_image_self_build_name if docker_registry_proxy_container_image_self_build else docker_registry_proxy_container_image }}


{% for network in docker_registry_proxy_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ docker_registry_proxy_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ docker_registry_proxy_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ docker_registry_proxy_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ docker_registry_proxy_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ docker_registry_proxy_identifier }}

[Install]
WantedBy=multi-user.target
